// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String          @id @default(uuid())
  email     String          @unique
  clerkId   String          @unique
  name      String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  account   Account?
  entries   Entry[]
  analysis  EntryAnalysis[]
}

model Account {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  // stripeCustomerId String @unique

  @@unique([userId])
}

model Entry {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content  String         @db.Text
  analysis EntryAnalysis?

  @@unique([userId, id])
}

model EntryAnalysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   Entry  @relation(fields: [entryId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  type        String @db.Text
  projectName String @db.Text
  subject     String @db.Text
  summary     String @db.Text
  color       String @default("#0101fe") @db.Text

  @@unique([entryId])
  @@index([userId])
}
